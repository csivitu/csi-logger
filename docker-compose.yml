version: '3.8'

networks:
  logger-network:
    driver: bridge

services:
  csi-logger:
    container_name: csi-logger
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    volumes:
      - ./public:/app/public/
      - ./log:/app/log/
    networks:
      - logger-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:${PORT}/ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:16
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGPORT=${DB_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - logger-network
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: redis
    container_name: redis-db
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    networks:
      - logger-network
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  postgres:
    name: postgres-logger
    driver: local
